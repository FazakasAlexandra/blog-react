{"version":3,"sources":["classes/FetchApi.js","components/Fontawesome/Fontawesome.jsx","components/SearchBar/SearchBar.jsx","components/NavBar/NavBar.jsx","components/Footer/Footer.jsx","components/Comment/Comment.jsx","components/Post/Post.jsx","components/Forms/SignInForm/SignInForm.jsx","components/Account/Account.jsx","components/About/About.jsx","components/Forms/PostForm/PostForm.jsx","components/Forms/NewPostForm/NewPostForm.jsx","components/Forms/EditPostForm/EditPostForm.jsx","navigation.jsx","App.jsx","serviceWorker.js","index.js"],"names":["FetchApi","baseUrl","this","fetch","method","response","json","postsJson","post","headers","body","JSON","stringify","responseJson","console","log","id","postId","comment","library","add","faHome","faUser","faEnvelope","fab","faKey","faEdit","faTrashAlt","faPlusSquare","faSearch","faBars","faTimes","SearchBar","props","type","placeholder","onChange","e","search","icon","NavBar","smallView","accountClickEvent","isLoggedIn","singInClickEvent","style","display","state","viewMenu","onClick","homeClickEvent","aboutClickEvent","signOutClickEvent","showSeachBar","setState","page","account","Fragment","className","paddingBottom","React","Component","Footer","Comment","src","fontSize","user","text","marginTop","date","Post","newPostComment","a","fetchApi","newComment","handleCommentClick","event","isAuth","document","getElementById","value","comments","getComments","button","postViewClick","editMode","postEditClick","deleteMode","postDeleteClick","homePageText","substring","viewPageText","map","commentComponents","getCommentComponents","getCommentSection","isViewPost","choseButton","auth","title","choseTextLength","SignInForm","handleChange","target","name","nameClass","password","passClass","handleSignIn","valid","checkErrors","signedIn","signIn","localStorage","setItem","nameError","passwordError","error","Account","accNewPostClick","accEditPostClick","accDeletePostClick","About","PostForm","getInputs","author","formClickEvent","htmlFor","defaultValue","buttonName","NewPostForm","postNewClick","EditPostForm","new","getPostComponents","self","posts","filter","toLowerCase","includes","key","handleViewBttn","displayEditForm","handleDeletePost","editPostMode","deletePostMode","pushState","pageName","window","history","App","componentDidMount","getPosts","localName","getItem","localPassword","handleSingIn","currentPage","handleSingOut","firstKey","secKey","removeItem","handleAccNewPost","newPostMode","handleAccEditPost","handleAccDeletePost","selectedPost","handleNewPost","newPost","displayNewPost","postsCopy","push","handleEditPost","editedPost","editPost","displayEditedPost","newPosts","replacePreviousPost","deletePost","choseMainSectionClass","choseClassName","keyword","defaultModes","choseComponent","renderView","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3a1a9562.chunk.js","sourcesContent":["export class FetchApi {\r\n  constructor(baseUrl) {\r\n    this.baseUrl = baseUrl;\r\n  }\r\n\r\n  async getPosts() {\r\n    const response = await fetch(this.baseUrl + '/posts', { method: 'GET' });\r\n    const postsJson = await response.json(); // {id, title ...}[]\r\n\r\n    return postsJson\r\n  }\r\n\r\n  async newPost(post) {\r\n    const response = await fetch(this.baseUrl + '/posts', { \r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify(post)\r\n    });\r\n    const responseJson = await response.json();\r\n    console.log(responseJson)\r\n    return responseJson\r\n  }\r\n\r\n  async editPost(post, id) {\r\n    const response = await fetch(`${this.baseUrl}/posts/${id}`, {\r\n      method: 'PUT',\r\n      headers: {'Content-Type' : 'application/json'},\r\n      body: JSON.stringify(post)\r\n    });\r\n    const responseJson = await response.json()\r\n    console.log(responseJson)\r\n    \r\n    return responseJson\r\n  }\r\n\r\n  async getComments(postId) {\r\n    const response = await fetch(`${this.baseUrl}/posts/${postId}/comments`,\r\n    {\r\n      method: 'GET',\r\n      headers: {'Content-Type' : 'application/json'}\r\n    });\r\n    const responseJson = await response.json()\r\n\r\n    return responseJson\r\n  }\r\n\r\n  async newComment(postId, comment) {\r\n    const response = await fetch(`${this.baseUrl}/posts/${postId}/comments`, \r\n    {\r\n      method: 'POST',\r\n      headers: {'Content-Type' : 'application/json'},\r\n      body: JSON.stringify(comment)\r\n    })\r\n    const responseJson = await response.json()\r\n\r\n    return responseJson\r\n  }\r\n\r\n  deletePost(id) {\r\n    fetch(`${this.baseUrl}/posts/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {'Content-Type': 'application/json'},\r\n    })\r\n  }\r\n}","import { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faHome, faUser, faEnvelope, faKey, faEdit, faTrashAlt, faPlusSquare, faSearch, faBars, faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\n\r\nlibrary.add(\r\n    faHome, \r\n    faUser, \r\n    faEnvelope, \r\n    fab, \r\n    faKey, \r\n    faEdit, \r\n    faTrashAlt, \r\n    faPlusSquare,\r\n    faSearch,\r\n    faBars,\r\n    faTimes,\r\n)","import React from 'react'\r\nimport '../Fontawesome/Fontawesome'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './searchBar.css'\r\n\r\nexport function SearchBar(props) {\r\n    return(\r\n        <span id=\"serach-container\">\r\n            <input type=\"text\"\r\n                id='search-bar'\r\n                placeholder=\"Search...\"\r\n                onChange={(e) => props.search(e)} />\r\n            <FontAwesomeIcon icon=\"search\" />\r\n        </span>\r\n    )\r\n}","import React from 'react'\r\nimport './navBar.css'\r\nimport { SearchBar} from '../SearchBar/SearchBar'\r\nimport '../Fontawesome/Fontawesome'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { render } from '@testing-library/react'\r\n\r\nexport class NavBar extends React.Component{\r\n    constructor(props){\r\n    super(props)\r\n    this.state={\r\n        viewMenu: false\r\n     }\r\n    }\r\n\r\n    showSeachBar(){\r\n        switch(this.props.page){\r\n            case'home.html':\r\n            return  <SearchBar search={this.props.search}/>\r\n            \r\n            case 'edit-post.html' :\r\n            return  <SearchBar search={this.props.search}/>\r\n            \r\n            case 'delete-post.html' :\r\n            return <SearchBar search={this.props.search}/>\r\n\r\n            default : \r\n            return null\r\n        }\r\n    }\r\n\r\n        smallView = ()=>{\r\n            let accountClickEvent = this.props.isLoggedIn ? this.props.accountClickEvent : this.props.singInClickEvent\r\n            let style = {\r\n                display : this.state.viewMenu ? 'block' : 'none'\r\n            }\r\n            return (\r\n            <div id='li-wraper-small' style={style}>\r\n                <li id=\"one\" onClick={() => this.props.homeClickEvent()}>Home</li>\r\n                <li id=\"two\" onClick={()=> this.props.aboutClickEvent()}>About</li>\r\n                <li id=\"three\" onClick={() => accountClickEvent()}><span>{this.props.isLoggedIn ? 'Account' : 'Sign in'}</span></li>\r\n                <li id=\"four\" onClick={() => this.props.signOutClickEvent()}><span>{this.props.isLoggedIn ? 'Sign out' : null}</span></li>\r\n                {this.showSeachBar()}\r\n                <FontAwesomeIcon icon=\"times\" id=\"close-menu\" onClick={()=>this.setState({viewMenu: false})}/>\r\n            </div>\r\n            )\r\n        }\r\n\r\n        render(){\r\n            let liWraperClass= this.state.viewMenu ? 'li-wraper-small' : 'li-wraper'\r\n            let account = <> <FontAwesomeIcon icon=\"user\" /><span> Account</span> </>\r\n            let accountClickEvent = this.props.isLoggedIn ? this.props.accountClickEvent : this.props.singInClickEvent\r\n        return (\r\n            <React.Fragment>\r\n                <ul className='nav-bar' style={this.props.page === 'account.html' ? { paddingBottom: '0.9rem' } : null}>\r\n                    <div id='li-wraper'>\r\n                        <li id=\"one\" onClick={() => this.props.homeClickEvent()}><FontAwesomeIcon icon=\"home\" /><span> Home</span></li>\r\n                        <li id=\"two\" onClick={()=> this.props.aboutClickEvent()}><span>About</span></li>\r\n                        <li id=\"three\" onClick={() => accountClickEvent()}><span>{this.props.isLoggedIn ? account : 'Sign in'}</span></li>\r\n                        {this.showSeachBar()}\r\n                        <li id=\"four\" onClick={() => this.props.signOutClickEvent()}><span>{this.props.isLoggedIn ? 'Sign out' : null}</span></li>\r\n                    </div>\r\n                    <FontAwesomeIcon icon='bars' id=\"bars\" onClick={()=> {this.setState({viewMenu:true})}}/>\r\n                    {this.state.viewMenu ? this.smallView() : null}\r\n                </ul>\r\n            </React.Fragment>\r\n        )\r\n        }\r\n}\r\n","import React from 'react'\r\nimport './footer.css'\r\nimport '../Fontawesome/Fontawesome'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport function Footer() {\r\n    return (\r\n        <div className='contact'>\r\n            <h3>Contact</h3>\r\n            <div className=\"email-wraper\">\r\n                <FontAwesomeIcon icon=\"envelope\" />\r\n                <p>pigeon.bloger@gmail.com</p>\r\n            </div>\r\n            <div className=\"social-media-contact\">\r\n                <FontAwesomeIcon icon={['fab', 'facebook']} />\r\n                <FontAwesomeIcon icon={['fab', 'twitter']} />\r\n                <FontAwesomeIcon icon={['fab', 'youtube']} />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './comment.css'\r\n\r\nexport function Comment(props) {\r\n    return (\r\n        <div className='comment'>\r\n            <img src=\"https://image.flaticon.com/icons/svg/702/702756.svg\"/>\r\n            <div className = 'comment-text'>\r\n            <p style={{fontSize: '1.3rem'}}>{props.user}</p>\r\n            <p style={{fontSize: '0.9rem'}}>{props.text}</p>\r\n            <p style={{fontSize: '0.7rem', marginTop:'1rem'}}>{props.date}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './Post.css'\r\nimport '../Fontawesome/Fontawesome'\r\nimport { FetchApi } from '../../classes/FetchApi'\r\nimport { Comment } from '../Comment/Comment'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport class Post extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      comments: []\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let fetchApi = new FetchApi('http://localhost:3000')\r\n    let response = await fetchApi.getComments(this.props.post.id)\r\n    this.setState({comments: response})\r\n  }\r\n\r\n  newPostComment = async (comment) => {\r\n    console.log(comment)\r\n    let fetchApi = new FetchApi('http://localhost:3000')\r\n    let response = await fetchApi.newComment(this.props.post.id, comment)\r\n\r\n    return response \r\n  }\r\n\r\n  handleCommentClick = async(event) => {\r\n    let user = this.props.isAuth ? 'admin' : document. getElementById('comment-user').value\r\n    console.log(user)\r\n    let text = document.getElementById('comment-textarea').value\r\n    let newComment = await this.newPostComment({user, text})\r\n\r\n    this.setState({comments : [...this.state.comments, newComment]})\r\n  }\r\n\r\n  choseButton() {\r\n    let button;\r\n\r\n    if (this.props.page === 'home.html') {\r\n      button = <button \r\n                 onClick={() => this.props.postViewClick(this.props.post)}>\r\n                 View\r\n                </button>\r\n\r\n    } else if (this.props.editMode) {\r\n      button = <button onClick={() => \r\n                 this.props.postEditClick(this.props.post)} \r\n                 className=\"edit-button\">\r\n                 Edit\r\n               </button>\r\n               \r\n    } else if (this.props.deleteMode) {\r\n      button = <button \r\n                 onClick={() => this.props.postDeleteClick(this.props.post)} \r\n                 className=\"delete-button\">\r\n                <FontAwesomeIcon icon='trash-alt' id=\"trash-icon\"/>\r\n               </button>\r\n    }\r\n\r\n    return button\r\n  }\r\n\r\n  choseTextLength(){\r\n    let homePageText = <p className='post-text'>{this.props.post.text.substring(0, 100)}...</p>\r\n    let viewPageText = <p className='post-text-view'>{this.props.post.text}</p> \r\n    let length;\r\n    \r\n    if(this.props.page === 'home.html' || this.props.page === 'delete-post.html' || this.props.page === 'edit-post.html'){\r\n      length = homePageText\r\n    } else {\r\n      length = viewPageText\r\n    }\r\n    \r\n    return length\r\n  } \r\n\r\n  getCommentComponents(){\r\n    console.log(this.state.comments)\r\n    const commentComponents = this.state.comments.map((comment) => {\r\n      return(<Comment\r\n        user={comment.user}\r\n        text={comment.text}\r\n        date={comment.date}\r\n      />)\r\n    })\r\n\r\n    return commentComponents\r\n  }\r\n\r\n  getCommentSection() {\r\n      let commentComponents = this.getCommentComponents()\r\n      return (\r\n        <div className='comment-section-wraper'>\r\n          <div className='comments-wraper'>\r\n            {commentComponents}\r\n          </div>\r\n        </div>\r\n      )\r\n  }\r\n\r\n  isViewPost(){\r\n    if (this.props.page === 'view-post.html') {\r\n      return (\r\n        <>\r\n          <div className = \"new-comment-section\">\r\n          {this.props.isAuth ? null : <input type=\"text\" id =\"comment-user\" placeholder=\"Name\"/>}\r\n          <div className=\"textarea-container\">\r\n          <textarea id=\"comment-textarea\"></textarea>\r\n          <FontAwesomeIcon icon={'plus-square'} id=\"add-comment-icon\" onClick={this.handleCommentClick}/>\r\n          </div>\r\n          </div>\r\n          {this.getCommentSection()}\r\n        </>\r\n      )\r\n    }\r\n  }\r\n  \r\n  render(){\r\n  const comments = this.isViewPost()\r\n  const button = this.choseButton()\r\n  return (\r\n    <div className=\"post\">\r\n      <img src={this.props.auth === \"Alexandra\" ? \"https://image.flaticon.com/icons/svg/1196/1196498.svg\"\r\n                                                : \"https://image.flaticon.com/icons/png/512/2983/2983660.png\"} />\r\n      <h3>{this.props.post.title}</h3>\r\n      {this.choseTextLength()}\r\n      {comments}\r\n      {button}\r\n    </div>\r\n  )\r\n  }\r\n}","import './sign-in-form.css'\r\nimport './invalid-inputs.css'\r\nimport './valid-inputs.css'\r\nimport React, { Component } from 'react'\r\nimport '../../Fontawesome/Fontawesome'\r\n//import '../Fontawesome/Fontawesome'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nfunction setLocalStorage(name, password) {\r\n    localStorage.setItem(\"name\", name);\r\n    localStorage.setItem(\"password\", password);\r\n}\r\n\r\nexport class SignInForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            nameClass: 'sign-in-form-user',\r\n            passClass: 'sign-in-form-pass',\r\n            name: '',\r\n            password: '',\r\n            nameError: '',\r\n            passwordError: '',\r\n            signedIn: false\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let { name, value } = event.target\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                this.setState({ name: value })\r\n                this.setState({ nameClass: 'sign-in-form-user' })\r\n                break\r\n\r\n            case 'password':\r\n                this.setState({ password: value })\r\n                this.setState({ passClass: 'sign-in-form-pass' })\r\n                break\r\n        }\r\n    }\r\n\r\n    handleSignIn = () => {\r\n        let valid = this.checkErrors()\r\n        if (valid) {\r\n            this.setState({ signedIn: true }, () => {\r\n                (this.props.signIn(this.state.signedIn))\r\n            })\r\n            console.log('succesfully signed in!')\r\n            setLocalStorage(this.state.password, this.state.name)\r\n        }\r\n        console.log(valid)\r\n    }\r\n\r\n    checkErrors() {\r\n        let valid = true\r\n        let { name, password } = this.state\r\n        if (name !== 'admin' && password !== 'admin' || name === \"\" && password === \"\") {\r\n            console.error('no admin')\r\n            this.setState({ nameError: this.state.name, nameClass: \"sign-in-form-user-invalid\" })\r\n            this.setState({ passwordError: this.state.password, passClass: \"sign-in-form-pass-invalid\" }, () => {\r\n                console.log(this.state.nameError)\r\n            })\r\n            valid = false\r\n        } else if (password !== 'admin') {\r\n            this.setState({ passwordError: this.state.password, passClass: \"sign-in-form-pass-invalid\" }, () => {\r\n                console.log(this.state.passwordError)\r\n            })\r\n            valid = false\r\n        } else if (name !== 'admin') {\r\n            this.setState({ nameError: this.state.name, nameClass: \"sign-in-form-user-invalid\" }, () => {\r\n                console.log(this.state.nameError)\r\n            })\r\n            valid = false\r\n        }\r\n\r\n        return valid\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sign-in-form-wraper\">\r\n                <form className=\"sign-in-form\">\r\n                    <div className={this.state.nameClass}>\r\n                        <FontAwesomeIcon icon=\"user\" id={`${this.state.nameClass}-icon`} />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            placeholder=\"name\"\r\n                            value={this.state.name}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={this.state.passClass}>\r\n                        <FontAwesomeIcon icon=\"key\" id={`${this.state.passClass}-icon`} />\r\n                        <input type=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"password\"\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <button type=\"button\" onClick={() => this.handleSignIn()}>Sign in</button>\r\n                </form>\r\n\r\n                <div className=\"sign-in-form-image\">\r\n                    <img src=\"https://image.freepik.com/free-vector/login-concept-illustration_114360-739.jpg\" />\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './account.css'\r\nimport '../Fontawesome/Fontawesome'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport function Account(props) {\r\n    return(\r\n        <div className = \"account\">\r\n            <div className = \"user-image\">\r\n            <div className = \"controls\">\r\n                <button id=\"new-post\" onClick={()=>props.accNewPostClick()}><FontAwesomeIcon icon={'plus-square'}/> Post</button>\r\n                <button id=\"edit-post\" onClick={()=>props.accEditPostClick()}><FontAwesomeIcon icon={'edit'}/> Edit</button>\r\n                <button id=\"delete-post\" onClick={()=>props.accDeletePostClick()}><FontAwesomeIcon icon={'trash-alt'}/> Delete</button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './about.css'\r\n\r\nexport function About() {\r\n    return (\r\n        <div className=\"about\">\r\n            <img src=\"https://image.flaticon.com/icons/svg/1196/1196498.svg\"/>\r\n            <h3>Join our pigeon team today!</h3>\r\n            <p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?</p>\r\n            <p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?</p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport class PostForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    getInputs = () => {\r\n        let title = document.getElementById('title-input').value\r\n        let author = document.getElementById('author-input').value\r\n        let date = document.getElementById('date-input').value\r\n        let text = document.getElementById('text-input').value\r\n\r\n        let post = {\r\n            title : title === \"\" ? 'No title' : title,\r\n            author : author === \"\" ? 'Anonymous' : author,\r\n            date,\r\n            text,\r\n        }\r\n\r\n        this.props.formClickEvent(post)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"post-form\">\r\n\r\n                <div className=\"top-wraper\">\r\n                    <div className=\"top-input-wraper\">\r\n                        <label htmlFor=\"title\" id=\"title\"> Title</label>\r\n                        <input type=\"text\" name=\"title\" id=\"title-input\" defaultValue={this.props.title}/>\r\n                    </div>\r\n\r\n                    <div className=\"top-input-wraper\">\r\n                        <label htmlFor=\"author\"> Author </label>\r\n                        <input type=\"text\" name=\"author\" id=\"author-input\" defaultValue={this.props.author}/>\r\n                    </div>\r\n\r\n                    <div className=\"top-input-wraper\" id=\"no-left-padding\">\r\n                        <label htmlFor=\"date\"> Date </label>\r\n                        <input type=\"text\" id=\"date-input\" defaultValue ={this.props.date}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <textarea type=\"text\" name=\"text\" id=\"text-input\" defaultValue={this.props.text}></textarea>\r\n\r\n                <button onClick={(event) => this.getInputs(event.target)} type='button'><span> {this.props.buttonName} </span></button>\r\n            </form>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {PostForm} from '../PostForm/PostForm'\r\nimport './newPostForm.css'\r\n\r\nexport class NewPostForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <PostForm\r\n            title = {this.props.title}\r\n            author = {this.props.author}\r\n            text = {this.props.text}\r\n            buttonName = {'Post'}\r\n            formClickEvent = {this.props.postNewClick}\r\n            />\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {PostForm} from '../PostForm/PostForm'\r\n\r\n export class EditPostForm extends React.Component {\r\n     constructor(props){\r\n         super(props)\r\n     }\r\n\r\n     render(){\r\n         return (\r\n            <PostForm\r\n            title = {this.props.title}\r\n            author = {this.props.author}\r\n            date = {this.props.date}\r\n            text = {this.props.text}\r\n            buttonName = {'Submit'} \r\n            formClickEvent = {this.props.new}\r\n            />\r\n         )\r\n     }\r\n }","import { Post } from './components/Post/Post';\r\nimport { SignInForm } from './components/Forms/SignInForm/SignInForm'\r\nimport { Account } from './components/Account/Account'\r\nimport { About } from './components/About/About'\r\nimport { NewPostForm } from './components/Forms/NewPostForm/NewPostForm'\r\nimport { EditPostForm } from './components/Forms/EditPostForm/EditPostForm'\r\nimport React from 'react'\r\n\r\n\r\nfunction getPostComponents(self, posts, page){\r\n  const postComponents = posts.filter((post)=>{\r\n    if(self.state.search === null){\r\n      return post\r\n    } else if(post.title.toLowerCase().includes(self.state.search.toLowerCase()) || post.text.toLowerCase().includes(self.state.search.toLowerCase())){\r\n      return post\r\n    }\r\n  }).map(post => {\r\n    return (\r\n      <Post\r\n        page={page}\r\n        auth={post.author}\r\n        key={post.id}\r\n        post={post}\r\n        isAuth={self.state.isAuth}\r\n        // changes current page into 'view-post.html'\r\n        postViewClick={self.handleViewBttn}\r\n        postEditClick={self.displayEditForm}\r\n        postDeleteClick={self.handleDeletePost}\r\n        editMode={self.state.editPostMode}\r\n        deleteMode={self.state.deletePostMode}\r\n      ></Post>\r\n    )\r\n  })\r\n  return postComponents\r\n}\r\n\r\nfunction choseClassName(state) {\r\n  let className = \"\"\r\n\r\n  switch (state.currentPage) {\r\n    case 'home.html':\r\n      className = 'posts'\r\n      break\r\n\r\n    case 'view-post.html':\r\n      className = 'posts-view'\r\n      break\r\n\r\n    case 'sign-in.html':\r\n      className = 'sign-in'\r\n      break\r\n\r\n    case 'account.html':\r\n      className = 'acount-wraper'\r\n      break\r\n\r\n    case 'delete-post.html':\r\n      className = 'posts-delete'\r\n      break\r\n\r\n    case 'edit-post.html':\r\n      className = 'posts-edit'\r\n      break\r\n\r\n    case `edit-post-form.html`:\r\n      className = `edit`\r\n  }\r\n\r\n  return className\r\n}\r\n\r\n\r\nfunction choseComponent(self) {\r\n\r\n  switch (self.state.currentPage) {\r\n\r\n    case 'home.html': {\r\n      pushState('home.html')\r\n      //popState(self)\r\n      self.defaultModes()\r\n      window.history.pushState({page:'home.html'}, 'home','/home.html')\r\n      const posts = self.state.posts\r\n      const postComponents = getPostComponents(self,posts,'home.html')\r\n      return postComponents\r\n    }\r\n\r\n    case 'view-post.html': {\r\n      window.history.pushState('view', 'view',`/view-post-${self.state.selectedPost.id}.html`)\r\n      return (\r\n        <div>\r\n          <Post\r\n            auth={self.state.selectedPost.author}\r\n            post={self.state.selectedPost}\r\n            isAuth={self.state.isAuth}\r\n            page={'view-post.html'}\r\n          ></Post>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    case 'sign-in.html': {\r\n      pushState('sign-in.html')\r\n      //popState(self)\r\n      return <SignInForm signIn={self.handleSingIn} />\r\n    }\r\n\r\n    case 'account.html': {\r\n      pushState('account.html')\r\n     // popState(self)\r\n      return (\r\n        <Account\r\n          // newPostMode -> true\r\n          accNewPostClick={self.handleAccNewPost}\r\n          // editPostMode -> true\r\n          accEditPostClick={self.handleAccEditPost}\r\n          // deletePostMode -> true\r\n          accDeletePostClick={self.handleAccDeletePost}\r\n        />)\r\n    }\r\n\r\n    case 'new-post.html': {\r\n      pushState('new-post.html')\r\n     // popState(self)\r\n      return (<NewPostForm \r\n               postNewClick={self.handleNewPost} \r\n               buttonName = {'Post'}\r\n               />)\r\n    }\r\n\r\n    case 'edit-post.html': {\r\n      pushState('edit-post.html')\r\n      // popState(self)\r\n      const posts = self.state.posts\r\n      const postComponents = getPostComponents(self, posts, 'edit-post.html')\r\n      return postComponents;\r\n    }\r\n\r\n    case 'edit-post-form.html': {\r\n      let { selectedPost : post} = self.state\r\n      window.history.pushState({page:'edit-post-form.html'}, null , `/edit-post-${post.id}.html`)\r\n      return (\r\n        <EditPostForm\r\n          title = {post.title}\r\n          text = {post.text}\r\n          author = {post.author}\r\n          date = {post.date}\r\n          new = {self.handleEditPost}\r\n        />\r\n      )\r\n    }\r\n\r\n    case 'delete-post.html': {\r\n      pushState('delete-post.html')\r\n     // popState(self)\r\n\r\n      const posts = self.state.posts\r\n      const postComponents = getPostComponents(self, posts, 'delete-post.html')\r\n      return postComponents;\r\n    }\r\n\r\n    case 'about.html': \r\n      window.history.pushState({page:'about.html'}, null ,'/about.html')\r\n\r\n       return <About/>\r\n\r\n  }\r\n}\r\n\r\nfunction pushState(pageName){\r\n  window.history.pushState({page:pageName}, null ,`/${pageName}`)\r\n}\r\n\r\nexport { choseClassName, choseComponent }","import React from 'react';\r\nimport './App.css';\r\nimport { FetchApi } from './classes/FetchApi'\r\nimport { NavBar } from './components/NavBar/NavBar'\r\nimport { Footer } from './components/Footer/Footer'\r\nimport { choseClassName, choseComponent } from './navigation.jsx'\r\n\r\nfunction userSignedIn() {\r\n  let localName = localStorage.getItem(\"name\")\r\n  let localPassword = localStorage.getItem(\"password\")\r\n\r\n  let signedIn = checkUser(localName, localPassword)\r\n\r\n  return signedIn\r\n}\r\n\r\nfunction checkUser(localName, localPassword) {\r\n  let validUser = localName === 'admin' && localPassword === 'admin' ? true : false\r\n  return validUser\r\n}\r\n\r\nfunction removeLocalStorageItem(firstKey, secKey) {\r\n  window.localStorage.removeItem(firstKey)\r\n  window.localStorage.removeItem(secKey)\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      posts: [],\r\n      search: null,\r\n      isAuth: false,\r\n      editPostMode: false,\r\n      deletePostMode: false,\r\n      newPostMode: false,\r\n      currentPage: 'home.html'\r\n    }\r\n  }\r\n\r\n  // case home.html : set all modes to default\r\n  defaultModes() {\r\n    if (this.state.newPostMode) {\r\n      this.setState({ newPostMode: false })\r\n    } else if (this.state.editMode) {\r\n      this.setState({ editMode: false })\r\n    } else if (this.state.deleteMode) {\r\n      this.setState({ deleteMode: false })\r\n    }\r\n  }\r\n\r\n\r\n  // handlers for sign in / sign out\r\n  componentDidMount = async() => {\r\n    const fetchApi = new FetchApi('http://localhost:3000');\r\n    const posts = await fetchApi.getPosts();\r\n    console.log(posts);\r\n    this.setState({ posts: posts })\r\n\r\n    if (userSignedIn()) {\r\n      this.setState({ isAuth: true })\r\n    }\r\n  }\r\n\r\n  handleSingIn = () => {\r\n    console.log('worked')\r\n    this.setState({ currentPage: 'account.html', isAuth: true })\r\n  }\r\n\r\n  handleSingOut = () => {\r\n    this.setState({ currentPage: 'home.html', isAuth: false })\r\n    removeLocalStorageItem('name', 'password')\r\n  }\r\n\r\n\r\n  // handlers for account(Acc) buttons\r\n  handleAccNewPost = () => {\r\n    this.setState({ newPostMode: true, currentPage: 'new-post.html' })\r\n  }\r\n\r\n  handleAccEditPost = () => {\r\n    this.setState({ editPostMode: true, currentPage: 'edit-post.html'})\r\n  }\r\n\r\n  handleAccDeletePost = () => {\r\n    this.setState({ deletePostMode: true, currentPage: \"delete-post.html\"})\r\n    if(this.state.editPostMode){\r\n      this.setState({editPostMode:false})\r\n    }\r\n  }\r\n\r\n\r\n  // handlers for post buttons\r\n  handleViewBttn = (post) => {\r\n    this.setState({\r\n      selectedPost: post,\r\n      currentPage: 'view-post.html'\r\n    })\r\n  }\r\n\r\n  handleNewPost = async (post) => {\r\n    console.log('post button clicked')\r\n    console.log(post)\r\n    const fetchApi = new FetchApi('http://localhost:3000');\r\n    const newPost = await fetchApi.newPost(post);\r\n    console.log(newPost)\r\n    this.displayNewPost(newPost)\r\n  }\r\n\r\n  displayNewPost = (newPost) => {\r\n    let postsCopy = [...this.state.posts]\r\n    postsCopy.push(newPost)\r\n    this.setState({\r\n      posts: postsCopy,\r\n      currentPage: 'view-post.html',\r\n      selectedPost: newPost,\r\n      newPostMode: false,\r\n    })\r\n  }\r\n\r\n  displayEditForm = (post) => {\r\n    console.error(post)\r\n    this.setState({ \r\n      editMode: true, \r\n      selectedPost: post,\r\n      currentPage: `edit-post-form.html`,\r\n     }, ()=>{\r\n      console.log(this.state)\r\n    })\r\n  }\r\n\r\n  handleEditPost = async (editedPost, id) => {\r\n    console.log(editedPost, this.state.selectedPost.id)\r\n    let fetchApi = new FetchApi('http://localhost:3000')\r\n    let response = await fetchApi.editPost(editedPost, this.state.selectedPost.id)\r\n    console.log(response)\r\n    this.displayEditedPost(response)\r\n  }\r\n\r\n  displayEditedPost = (response) => {\r\n    let newPosts = this.replacePreviousPost(response)\r\n    this.setState({\r\n      editMode: false,\r\n      posts: newPosts,\r\n      selectedPost: response,\r\n      currentPage: `view-post.html`\r\n    })\r\n  }\r\n\r\n  replacePreviousPost(response) {\r\n    let newPosts = this.state.posts.map((post)=>{\r\n      if(post.id === response.id){\r\n        post = response\r\n      }\r\n      return post\r\n    })\r\n\r\n    return newPosts\r\n  }\r\n\r\n  handleDeletePost = (selectedPost) => {\r\n    this.setState({posts: this.state.posts.filter(post => post.id !== selectedPost.id)}, ()=>{console.log(this.state.posts)})\r\n    this.deletePost(selectedPost.id)\r\n  }\r\n\r\n  deletePost(postId) {\r\n    const fetchApi = new FetchApi('http://localhost:3000');\r\n    fetchApi.deletePost(postId);\r\n  }\r\n\r\n\r\n  // chose components and section names based on current page \r\n  choseMainSectionClass = () => {\r\n    let className = choseClassName(this.state)\r\n    return className\r\n  }\r\n\r\n  search=(event)=>{\r\n    let keyword = event.target.value;\r\n    this.setState({search:keyword})\r\n    console.log(this.state.search)\r\n  }\r\n\r\n  renderView() {\r\n    let view = choseComponent(this)\r\n    return view\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <React.Fragment>\r\n          <NavBar\r\n            page ={this.state.currentPage}\r\n            homeClickEvent={ () => this.setState({ currentPage: 'home.html' }) }\r\n            aboutClickEvent={ () => this.setState({ currentPage: 'about.html' }) }\r\n            accountClickEvent={ () => this.setState({ currentPage: 'account.html' }) }\r\n            singInClickEvent={ () => this.setState({ currentPage: 'sign-in.html' }) }\r\n            signOutClickEvent={this.handleSingOut}\r\n            isLoggedIn={this.state.isAuth}\r\n            search={this.search}\r\n          />\r\n        </React.Fragment>\r\n        <div className={this.choseMainSectionClass()}>\r\n          {this.renderView()}\r\n        </div>\r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}